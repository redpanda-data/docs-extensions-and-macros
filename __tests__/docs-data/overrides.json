{
  "outputs": [
    {
      "name": "amqp_0_9",
      "config": {
        "children": [
          {
            "name": "urls",
            "type": "array",
            "description": "A list of URLs to connect to. This input attempts to connect to each URL in the list, in order, until a successful connection is established. It then continues to use that URL until the connection is closed.\n\nIf an item in the list contains commas, it is split into multiple URLs."
          },
          {
            "name": "exchange",
            "description": "The AMQP exchange to publish messages to. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "exchange_declare",
            "description": "Passively declares the <<exchange, target exchange>> to check whether an exchange with the specified name exists and is configured correctly. If the exchange exists, then the passive declaration verifies that fields specified in this object match its properties. If the target exchange does not exist, this output creates it.",
            "children": [
              {
                "name": "enabled",
                "description": "Whether to enable exchange declaration."
              },
              {
                "name": "type",
                "description": "The type of the exchange, which determines how messages are routed to queues.\n\nNOTE: Dots (`.`) in message keys are only enforced in routing keys and message types for `topic` exchanges."
              },
              {
                "name": "durable",
                "description": "Whether the declared exchange is durable."
              },
              {
                "name": "arguments",
                "description": "Arguments for server-specific implementations of the exchange (optional). You can use arguments to configure additional parameters for exchange types that require them."
              }
            ]
          },
          {
            "name": "key",
            "description": "The binding key to set for each message. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "type",
            "description": "A custom message type to set for each message. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_type",
            "description": "The MIME type of each message. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_encoding",
            "description": "The content encoding attribute of each message. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "correlation_id",
            "description": "Set a unique correlation ID for each message using a dynamic interpolated expression to help match messages to responses. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "reply_to",
            "description": "Set the name of the queue to which responses are sent using a dynamic interpolated expression. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "expiration",
            "description": "Set the TTL of each message in milliseconds. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "message_id",
            "description": "Set a message ID for each message using a dynamic interpolated expression. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "user_id",
            "description": "Set the user ID to the name of the publisher. If this property is set by a publisher, its value must match the name of the user that opened the connection. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "app_id",
            "description": "Set an application ID for each message using a dynamic interpolated expression. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "metadata",
            "description": "Specify which (if any) metadata values are added to messages as headers.",
            "children": [
              {
                "name": "exclude_prefixes",
                "type": "array",
                "description": "Provide a list of explicit metadata key prefixes to exclude when adding metadata to sent messages."
              }
            ]
          },
          {
            "name": "priority",
            "description": "Set the priority of each message using a dynamic interpolated expression. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "max_in_flight",
            "description": "The maximum number of messages to have in flight at a given time. Increase this number to improve throughput."
          },
          {
            "name": "persistent",
            "description": "Whether to store delivered messages on disk. By default, message delivery is transient."
          },
          {
            "name": "mandatory",
            "description": "Whether to set the mandatory flag on published messages. When set to `true`, a published message that cannot be routed to any queues is returned to the sender."
          },
          {
            "name": "immediate",
            "description": "Whether to set the immediate flag on published messages. When set to `true`, if there are no active consumers for a queue, the message is dropped instead of waiting."
          },
          {
            "name": "timeout",
            "description": "The maximum period to wait for a message acknowledgment before abandoning it and attempting a resend. If this value is not set, the system waits indefinitely."
          },
          {
            "name": "tls",
            "description": "Override system defaults with custom TLS settings.",
            "children": [
              {
                "name": "skip_cert_verify",
                "description": "Whether to skip server-side certificate verification."
              },
              {
                "name": "root_cas",
                "description": "Specify a certificate authority to use (optional). This is a string that represents a certificate chain from the parent-trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "root_cas_file",
                "description": "Specify the path to a root certificate authority file (optional). This is a file, often with a `.pem` extension, that contains a certificate chain from the parent-trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "client_certs",
                "description": "A list of client certificates to use. For each certificate, specify values for either the `cert` and `key` fields, or the `cert_file` and `key_file` fields."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "amqp_1",
      "config": {
        "children": [
          {
            "name": "content_type",
            "description": "The content type of the message body.\n\nSet this field value to `string` to transfer each message as an AMQP string. Consider using the `string` option if you want to write UTF-8 string messages, such as JSON messages, to your data destination."
          }
        ]
      }
    },
    {
      "name": "aws_dynamodb",
      "config": {
        "children": [
          {
            "name": "string_columns",
            "description": "A map of column keys to string values to store.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "backoff",
            "children": [
              {
                "name": "initial_interval",
                "description": "The initial period to wait between retry attempts. The retry interval increases for each failed attempt, up to the `backoff.max_interval` value."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "aws_kinesis",
      "config": {
        "children": [
          {
            "name": "partition_key",
            "description": "A required key for partitioning messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "hash_key",
            "description": "A optional hash key for partitioning messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "backoff",
            "children": [
              {
                "name": "initial_interval",
                "description": "The initial period to wait between retry attempts. The retry interval increases for each failed attempt, up to the `backoff.max_interval` value."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "aws_kinesis_firehose",
      "config": {
        "children": [
          {
            "name": "backoff",
            "children": [
              {
                "name": "initial_interval",
                "description": "The initial period to wait between retry attempts. The retry interval increases for each failed attempt, up to the `backoff.max_interval` value."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "aws_s3",
      "config": {
        "children": [
          {
            "name": "path",
            "description": "The path of each message to upload. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "tags",
            "description": "Key/value pairs to store with the object as tags.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_type",
            "description": "The content type to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_encoding",
            "description": "An optional content encoding to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "cache_control",
            "description": "The cache control to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_disposition",
            "description": "The content disposition to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_language",
            "description": "The content language to set for each object. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_md5",
            "description": "The https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#checking-object-integrity-md5[content MD5^] to set for each object. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "website_redirect_location",
            "description": "The website redirect location to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "storage_class",
            "description": "The storage class to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "kms_key_id",
            "description": "An optional server-side encryption key."
          },
          {
            "name": "checksum_algorithm",
            "description": "The algorithm used to validate each object during its upload to the Amazon S3 bucket."
          },
          {
            "name": "server_side_encryption",
            "description": "An optional server-side encryption algorithm."
          }
        ]
      }
    },
    {
      "name": "aws_sns",
      "config": {
        "children": [
          {
            "name": "message_group_id",
            "description": "An optional group ID to set for messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "message_deduplication_id",
            "description": "An optional deduplication ID to set for messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "aws_sqs",
      "config": {
        "children": [
          {
            "name": "url",
            "description": "The URL of the target SQS queue. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "message_group_id",
            "description": "An optional group ID to set for messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "message_deduplication_id",
            "description": "An optional deduplication ID to set for messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "delay_seconds",
            "description": "An optional delay time in seconds for message. Value between 0 and 900\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "max_records_per_request",
            "description": "The maximum number of records delivered in a single SQS request. Enter only values from `0` to `10`."
          },
          {
            "name": "backoff",
            "children": [
              {
                "name": "initial_interval",
                "description": "The initial period to wait between retry attempts. The retry interval increases for each failed attempt, up to the `backoff.max_interval` value."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "azure_blob_storage",
      "config": {
        "children": [
          {
            "name": "container",
            "description": "The container for uploading the messages to.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "path",
            "description": "The path of each message to upload. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "blob_type",
            "description": "Block and Append blobs are comprized of blocks, and each blob can support up to 50,000 blocks. The default value is `+\"`BLOCK`\"+`.`\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "public_access_level",
            "description": "The container's public access level. The default value is `PRIVATE`.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "azure_cosmosdb",
      "config": {
        "children": [
          {
            "name": "patch_condition",
            "description": "Patch operation condition.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "item_id",
            "description": "ID of item to replace or delete. Only used by the Replace and Delete operations\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "azure_data_lake_gen2",
      "config": {
        "children": [
          {
            "name": "storage_account",
            "description": "The storage account to access. This field is ignored when the `storage_connection_string` field is populated."
          },
          {
            "name": "storage_access_key",
            "description": "The access key for the storage account. Use this field along with `storage_account` for authentication. This field is ignored when the `storage_connection_string` field is populated."
          },
          {
            "name": "storage_connection_string",
            "description": "The connection string for the storage account. You must enter a value for this field if no other authentication method is specified.\n\nNOTE: If the `storage_connection_string` field does not contain the `AccountName` parameter value, specify it in the\n`storage_account` field."
          },
          {
            "name": "storage_sas_token",
            "description": "The SAS token for the storage account. Use this field along with `storage_account` for authentication. This field is ignored when either the `storage_connection_string` or `storage_access_key` fields are populated."
          },
          {
            "name": "filesystem",
            "description": "The name of the data lake storage file system you want to upload messages to. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "path",
            "description": "The path (file name) of each message to upload to the data lake storage file system. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "max_in_flight",
            "description": "The maximum number of messages to have in flight at a given time. Increase this number to improve throughput until performance plateaus."
          }
        ]
      }
    },
    {
      "name": "azure_queue_storage",
      "config": {
        "children": [
          {
            "name": "queue_name",
            "description": "The name of the target Queue Storage queue.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "ttl",
            "description": "The TTL of each individual message as a duration string. Defaults to 0, meaning no retention period is set\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "azure_table_storage",
      "config": {
        "children": [
          {
            "name": "table_name",
            "description": "The table to store messages into.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "partition_key",
            "description": "The partition key.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "row_key",
            "description": "The row key.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "properties",
            "description": "A map of properties to store into the table.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "transaction_type",
            "description": "Type of transaction operation.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "cache",
      "config": {
        "children": [
          {
            "name": "key",
            "description": "The key to store messages by, function interpolation should be used in order to derive a unique key for each message.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "ttl",
            "description": "The TTL of each individual item as a duration string. After this period an item will be eligible for removal during the next compaction. Not all caches support per-key TTLs, and those that do not will fall back to their generally configured TTL setting.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "cassandra",
      "config": {
        "children": [
          {
            "name": "backoff",
            "children": [
              {
                "name": "initial_interval",
                "description": "The initial period to wait between retry attempts. The retry interval increases for each failed attempt, up to the `backoff.max_interval` value."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "couchbase",
      "config": {
        "children": [
          {
            "name": "url",
            "description": "The Couchbase connection string."
          },
          {
            "name": "username",
            "description": "A username to authenticate with the Couchbase cluster."
          },
          {
            "name": "password",
            "description": "A password to authenticate with the Couchbase cluster."
          },
          {
            "name": "bucket",
            "description": "The name of the Couchbase bucket you want the output to access."
          },
          {
            "name": "collection",
            "description": "The name of the specific collection you want the output to write to."
          },
          {
            "name": "transcoder",
            "description": "Choose from the following Couchbase transcoders to convert the messages' data format before they are written to Couchbase."
          },
          {
            "name": "timeout",
            "description": "Operation timeout if this output cannot connect to the Couchbase cluster."
          },
          {
            "name": "id",
            "description": "The document ID to use.\n\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content",
            "description": "The document content to update. When inserting, replacing, or upserting documents, you must set a `content` value."
          },
          {
            "name": "operation",
            "description": "The Couchbase operation to perform."
          },
          {
            "name": "max_in_flight",
            "description": "The maximum number of messages to have in flight at a given time. Increase this value to improve throughput."
          },
          {
            "name": "batching",
            "description": "Configure a xref:configuration:batching.adoc[batching policy].",
            "children": [
              {
                "name": "count",
                "description": "The number of messages after which the batch is flushed. Set to `0` to disable count-based batching."
              },
              {
                "name": "byte_size",
                "description": "The amount of bytes at which the batch is flushed. Set to `0` to disable size-based batching."
              },
              {
                "name": "period",
                "description": "The period of time after which an incomplete batch is flushed regardless of its size."
              },
              {
                "name": "check",
                "description": "A xref:guides:bloblang/about.adoc[Bloblang query] that returns a boolean value indicating whether a message should end a batch."
              },
              {
                "name": "processors",
                "description": "For aggregating and archiving message batches, you can add a list of xref:components:processors/about.adoc[processors] to apply to a batch as it is flushed. All resulting messages are flushed as a single batch even when you configure processors to split the batch into smaller batches."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "cypher",
      "config": {
        "children": [
          {
            "name": "uri",
            "description": "The connection URI for your graphing database. For more information, see https://neo4j.com/docs/go-manual/current/connect-advanced/[Neo4j's documentation^]."
          },
          {
            "name": "database_name",
            "description": "Set the target database against which expressions are evaluated."
          },
          {
            "name": "args_mapping",
            "description": "Mappings from incoming messages to the data, which are passed into the cypher expression as parameters. All mappings must be objects. By default, this field processes the entire payload."
          },
          {
            "name": "basic_auth",
            "description": "Configure basic authentication for requests to your graphing database.",
            "children": [
              {
                "name": "username",
                "description": "The username of the account credentials to authenticate as."
              },
              {
                "name": "password",
                "description": "The password of the account credentials to authenticate with."
              },
              {
                "name": "realm",
                "description": "The realm or process for authentication challenges."
              }
            ]
          },
          {
            "name": "tls",
            "description": "Override system defaults with custom TLS settings.",
            "children": [
              {
                "name": "skip_cert_verify",
                "description": "Whether to skip server-side certificate verification."
              },
              {
                "name": "enable_renegotiation",
                "description": "Whether to allow the remote server to request renegotiation. Enable this option if you're seeing the error message \n`local error: tls: no renegotiation`."
              },
              {
                "name": "root_cas",
                "description": "Specify a certificate authority to use (optional). This is a string that represents a certificate chain from the parent trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "root_cas_file",
                "description": "Specify the path to a root certificate authority file (optional). This is a file, often with a `.pem` extension, which contains a certificate chain from the parent trusted root certificate, through possible intermediate signing certificates, to the host certificate.certificate."
              },
              {
                "name": "client_certs",
                "description": "A list of client certificates to use. For each certificate specify values for either the `cert` and `key` fields, or `cert_file` and `key_file` fields."
              }
            ]
          },
          {
            "name": "batching",
            "description": "Configure a xref:configuration:batching.adoc[batching policy].",
            "children": [
              {
                "name": "count",
                "description": "The number of messages after which the batch is flushed. Set to `0` to disable count-based batching."
              },
              {
                "name": "byte_size",
                "description": "The amount of bytes at which the batch is flushed. Set to `0` to disable size-based batching."
              },
              {
                "name": "period",
                "description": "The period of time after which an incomplete batch is flushed regardless of its size."
              },
              {
                "name": "check",
                "description": "A xref:guides:bloblang/about.adoc[Bloblang query] that returns a boolean value indicating whether a message should end a batch."
              },
              {
                "name": "processors",
                "description": "For aggregating and archiving message batches, you can add a list of xref:components:processors/about.adoc[processors] to apply to a batch as it is flushed. All resulting messages are flushed as a single batch even when you configure processors to split the batch into smaller batches."
              }
            ]
          },
          {
            "name": "max_in_flight",
            "description": "The maximum number of message batches to have in flight at a given time. Increase this value to improve throughput."
          }
        ]
      }
    },
    {
      "name": "elasticsearch",
      "config": {
        "children": [
          {
            "name": "index",
            "description": "The index to place messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "action",
            "description": "The action to take on the document. This field must resolve to one of the following action types: `create`, `index`, `update`, `upsert` or `delete`.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "pipeline",
            "description": "An optional pipeline id to preprocess incoming documents.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "id",
            "description": "The ID for indexed messages. Use interpolation to create a unique ID for each message.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "type",
            "description": "The document mapping type. This field is required for versions of elasticsearch earlier than 6.0.0, but are invalid for versions 7.0.0 or later.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "routing",
            "description": "The routing key to use for the document.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "retry_on_conflict",
            "description": "The number of times to retry an update operation when a version conflict occurs."
          },
          {
            "name": "backoff",
            "children": [
              {
                "name": "initial_interval",
                "description": "The initial period to wait between retry attempts. The retry interval increases for each failed attempt, up to the `backoff.max_interval` value."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "elasticsearch_v8",
      "config": {
        "children": [
          {
            "name": "urls",
            "type": "array",
            "description": "A list of URLs to connect to. This output attempts to connect to each URL in the list, in order, until a successful connection is established. If an item in the list contains commas, it is split into multiple URLs."
          },
          {
            "name": "index",
            "description": "The Elasticsearch index where messages are published. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "action",
            "description": "The action to perform on each document. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions].\n\nFor more information on how the `update` action works, see <<example-pipelines, Example pipelines>>."
          },
          {
            "name": "id",
            "description": "Define the ID for indexed messages. Use xref:configuration:interpolation.adoc#bloblang-queries[function interpolations] to dynamically create a unique ID for each message."
          },
          {
            "name": "pipeline",
            "description": "Specify the ID of a pipeline to preprocess incoming documents before they are published (optional). This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "routing",
            "description": "The routing key to use for the document. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "retry_on_conflict",
            "description": "The number of times to retry an update operation when a version conflict occurs."
          },
          {
            "name": "tls",
            "description": "Override system defaults with custom TLS settings.",
            "children": [
              {
                "name": "enabled",
                "description": "Enable custom TLS settings. By default, custom settings are disabled."
              },
              {
                "name": "skip_cert_verify",
                "description": "Whether to skip server-side certificate verification."
              },
              {
                "name": "root_cas",
                "description": "Specify a root certificate authority to use (optional). This is a string, representing a certificate chain from the parent-trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "root_cas_file",
                "description": "Specify the path to a root certificate authority file (optional). This is a file, often with a `.pem` extension, which contains a certificate chain from the parent-trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "client_certs",
                "description": "A list of client certificates to use. For each certificate, specify values for either the `cert` and `key` fields, or `cert_file` and `key_file` fields."
              }
            ]
          },
          {
            "name": "basic_auth",
            "children": [
              {
                "name": "username",
                "description": "The username to use for authentication."
              }
            ]
          },
          {
            "name": "batching",
            "children": [
              {
                "name": "count",
                "description": "The number of messages after which the batch is flushed. Set to `0` to disable count-based batching."
              },
              {
                "name": "byte_size",
                "description": "The number of bytes at which the batch is flushed. Set to `0` to disable size-based batching."
              },
              {
                "name": "period",
                "description": "The period after which an incomplete batch is flushed regardless of its size."
              },
              {
                "name": "processors",
                "description": "For aggregating and archiving message batches, you can add a list of xref:components:processors/about.adoc[processors] to apply to a batch as it is flushed. All resulting messages are flushed as a single batch even when you configure processors to split the batch into smaller batches."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "file",
      "config": {
        "children": [
          {
            "name": "path",
            "description": "The file to write to, if the file does not yet exist it will be created.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "gcp_bigquery",
      "config": {
        "children": [
          {
            "name": "project",
            "description": "Specify the project ID of the dataset to insert data into. If not set, the project ID is inferred from the project linked to the service account or read from the `GOOGLE_CLOUD_PROJECT` environment variable."
          },
          {
            "name": "job_project",
            "description": "Specify the project ID in which jobs are executed. If not set, the `project` value is used."
          },
          {
            "name": "table",
            "description": "The table to insert messages into."
          },
          {
            "name": "max_in_flight",
            "description": "The maximum number of message batches to have in flight at a given time. Increase this value to improve throughput."
          },
          {
            "name": "create_disposition",
            "description": "Specifies the circumstances under which a destination table is created. \n\n* Use `CREATE_IF_NEEDED` to create the destination table if it does not already exist. Tables are created atomically on successful completion of a job. \n* Use `CREATE_NEVER` if the destination table must already exist."
          },
          {
            "name": "ignore_unknown_values",
            "description": "Set this value to `true` to ignore values that do not match the schema:\n\n* For the `CSV` format, extra values at the end of a line are ignored. \n* For the `NEWLINE_DELIMITED_JSON` format, values that do not match any column name are ignored. \n\nBy default, this value is set to `false`, and records containing unknown values are treated as bad records. Use the `max_bad_records` field to customize how bad records are handled."
          },
          {
            "name": "max_bad_records",
            "description": "The maximum number of bad records to ignore when reading data and <<ignore_unknown_values, `ignore_unknown_values`>> is set to `true`."
          },
          {
            "name": "auto_detect",
            "description": "Whether this component automatically infers the options and schema for `CSV` and `NEWLINE_DELIMITED_JSON` sources. \n\nIf this value is set to `false` and the destination table doesn't exist, the output throws an insertion error as it is unable to insert data. \n\nCAUTION: This field delegates schema detection to the GCP BigQuery service. For the `CSV` format, values like `no` may be treated as booleans."
          },
          {
            "name": "credentials_json",
            "description": "Sets the  https://developers.google.com/workspace/guides/create-credentials#create_credentials_for_a_service_account[Google Service Account Credentials JSON^] (optional)."
          },
          {
            "name": "csv",
            "description": "Specify how CSV data is interpreted.",
            "children": [
              {
                "name": "header",
                "description": "A list of values to use as the header for each batch of messages. If not specified, the first line of each message is used as the header."
              },
              {
                "name": "field_delimiter",
                "description": "The separator for fields in a CSV file. The output uses this value when reading or exporting data."
              },
              {
                "name": "allow_jagged_rows",
                "description": "Set to `true` to treat optional missing trailing columns as nulls in CSV data."
              },
              {
                "name": "allow_quoted_newlines",
                "description": "Whether quoted data sections containing new lines are allowed when reading CSV data."
              },
              {
                "name": "encoding",
                "description": "The character encoding of CSV data."
              },
              {
                "name": "skip_leading_rows",
                "description": "The number of rows at the top of a CSV file that BigQuery will skip when reading data. The default value is `1`, which allows Redpanda Connect to add the specified header in the first line of each batch sent to BigQuery."
              }
            ]
          },
          {
            "name": "batching",
            "description": "Configure a xref:configuration:batching.adoc[batching policy].",
            "children": [
              {
                "name": "count",
                "description": "The number of messages after which the batch is flushed. Set to `0` to disable count-based batching."
              },
              {
                "name": "byte_size",
                "description": "The amount of bytes at which the batch is flushed. Set to `0` to disable size-based batching."
              },
              {
                "name": "period",
                "description": "The period of time after which an incomplete batch is flushed regardless of its size."
              },
              {
                "name": "check",
                "description": "A xref:guides:bloblang/about.adoc[Bloblang query] that returns a boolean value indicating whether a message should end a batch."
              },
              {
                "name": "processors",
                "description": "For aggregating and archiving message batches, you can add a list of xref:components:processors/about.adoc[processors] to apply to a batch as it is flushed. All resulting messages are flushed as a single batch even when you configure processors to split the batch into smaller batches."
              }
            ]
          }
        ]
      }
    },
    {
      "name": "gcp_cloud_storage",
      "config": {
        "children": [
          {
            "name": "path",
            "description": "The path of each message to upload. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_type",
            "description": "The content type to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "content_encoding",
            "description": "An optional content encoding to set for each object.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "credentials_json",
            "description": "Optional field to set https://developers.google.com/workspace/guides/create-credentials#create_credentials_for_a_service_account[Google Service Account Credentials JSON^]."
          }
        ]
      }
    },
    {
      "name": "gcp_pubsub",
      "config": {
        "children": [
          {
            "name": "credentials_json",
            "description": "Optional field to set https://developers.google.com/workspace/guides/create-credentials#create_credentials_for_a_service_account[Google Service Account Credentials JSON^]."
          },
          {
            "name": "topic",
            "description": "The topic to publish to.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "ordering_key",
            "description": "The ordering key to use for publishing messages.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "hdfs",
      "config": {
        "children": [
          {
            "name": "directory",
            "description": "A directory to store message files within. If the directory does not exist it will be created.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "path",
            "description": "The path to upload messages as. Use interpolation functions to generate unique file paths.\nThis field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          }
        ]
      }
    },
    {
      "name": "http_client",
      "config": {
        "children": [
          {
            "name": "url",
            "description": "The URL to connect to. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "verb",
            "description": "A verb to connect with."
          },
          {
            "name": "headers",
            "description": "A map of headers to add to the request. This field supports xref:configuration:interpolation.adoc#bloblang-queries[interpolation functions]."
          },
          {
            "name": "metadata",
            "description": "Specify matching rules that determine which metadata keys to add to the HTTP request as headers (optional)."
          },
          {
            "name": "dump_request_log_level",
            "description": "EXPERIMENTAL: Set the logging level for the request and response payloads of each HTTP request."
          },
          {
            "name": "oauth",
            "description": "Allows you to specify open authentication using OAuth version 1.",
            "children": [
              {
                "name": "consumer_secret",
                "description": "The secret used to establish ownership of the consumer key."
              },
              {
                "name": "access_token",
                "description": "The value used to gain access to the protected resources on behalf of the user."
              },
              {
                "name": "access_token_secret",
                "description": "The secret that establishes ownership of the `oauth.access_token`."
              }
            ]
          },
          {
            "name": "oauth2",
            "description": "Allows you to specify open authentication using OAuth version 2 and the client credentials token flow.",
            "children": [
              {
                "name": "client_secret",
                "description": "The secret used to establish ownership of the client key."
              },
              {
                "name": "scopes",
                "description": "A list of requested permissions (optional)."
              },
              {
                "name": "endpoint_params",
                "description": "A list of endpoint parameters specified as arrays of strings (optional)."
              }
            ]
          },
          {
            "name": "jwt",
            "description": "BETA: Allows you to specify JSON Web Token (JWT) authentication.",
            "children": [
              {
                "name": "private_key_file",
                "description": "A file with the PEM encoded using PKCS1 or PKCS8 as private key."
              },
              {
                "name": "signing_method",
                "description": "A method used to sign the token, such as RS256, RS384, RS512 or EdDSA."
              },
              {
                "name": "headers",
                "description": "Add key/value headers to the JWT (optional)."
              }
            ]
          },
          {
            "name": "tls",
            "description": "Override system defaults with custom TLS settings.",
            "children": [
              {
                "name": "skip_cert_verify",
                "description": "Whether to skip server-side certificate verification."
              },
              {
                "name": "root_cas",
                "description": "Specify a root certificate authority to use (optional). This is a string, representing a certificate chain from the parent-trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "root_cas_file",
                "description": "Specify the path to a root certificate authority file (optional). This is a file, often with a `.pem` extension, which contains a certificate chain from the parent-trusted root certificate, through possible intermediate signing certificates, to the host certificate."
              },
              {
                "name": "client_certs",
                "description": "A list of client certificates to use. For each certificate, specify values for either the `cert` and `key` fields, or `cert_file` and `key_file` fields."
              }
            ]
          },
          {
            "name": "extract_headers",
            "description": "Specify which response headers to add to the resulting synchronous response messages as metadata. Header keys are automatically converted to lowercase before matching, so make sure that your patterns target the lowercase versions of the expected header keys.\n\nThis field is only applicable when `propagate_response` is set to `true`.",
            "selfManagedOnly": true
          },
          {
            "name": "rate_limit",
            "description": "A xref:components:rate_limits/about.adoc[rate limit] to throttle requests by (optional)."
          },
          {
            "name": "retry_period",
            "description": "The initial period to wait between failed requests before retrying."
          },
          {
            "name": "backoff_on",
            "description": "A list of status codes that indicate a request failure and trigger retries with an increasing backoff period between attempts."
          },
          {
            "name": "drop_on",
            "description": "A list of status codes that indicate a request failure where the input should not attempt retries. This helps avoid unnecessary retries for requests that are unlikely to succeed.\n\nNOTE: In these cases, the _request_ is dropped, but the _message_ that triggered the request is retained."
          },
          {
            "name": "successful_on",
            "description": "A list of HTTP status codes that should be considered as successful, even if they are not 2XX codes. This is useful for handling cases where non-2XX codes indicate that the request was processed successfully, such as `303 See Other` or `409 Conflict`. \n\nBy default, all 2XX codes are considered successful unless they are specified in `backoff_on` or `drop_on` fields."
          },
          {
            "name": "proxy_url",
            "description": "A HTTP proxy URL (optional)."
          },
          {
            "name": "disable_http2",
            "description": "Whether to disable HTTP/2. By default, HTTP/2 is enabled."
          },
          {
            "name": "batch_as_multipart",
            "description": "When set to `true`, sends all message in a batch as a single request using https://www.w3.org/Protocols/rfc1341/7_2_Multipart.html[RFC1341^]. \n\nWhen set to `false`, sends messages in a batch as individual requests."
          },
          {
            "name": "propagate_response",
            "description": "Whether to xref:guides:sync_responses.adoc[propagate server responses back] to the input.",
            "selfManagedOnly": true
          },
          {
            "name": "max_in_flight",
            "description": "The maximum number of messages to have in flight at a given time. Increase this to improve throughput."
          },
          {
            "name": "batching",
            "children": [
              {
                "name": "count",
                "description": "The number of messages after which the batch is flushed. Set to `0` to disable count-based batching."
              },
              {
                "name": "byte_size",
                "description": "The amount of bytes at which the batch is flushed. Set to `0` to disable size-based batching."
              },
              {
                "name": "period",
                "description": "The period after which an incomplete batch is flushed regardless of its size."
              },
              {
                "name": "processors",
                "description": "For aggregating and archiving message batches, you can add a list of xref:components:processors/about.adoc[processors] to apply to a batch as it is flushed. All resulting messages are flushed as a single batch even when you configure processors to split the batch into smaller batches."
              }
            ]
          },
          {
            "name": "multipart",
            "description": "EXPERIMENTAL: Create explicit multipart HTTP requests by specifying an array of parts to add to a request. Each part consists of content headers and a data field, which can be populated dynamically. \n\nIf populated, this field overrides the <<message-sends, default request creation behavior>>."
          }
        ]
      }
    }
  ],
  "bloblang_methods": [
    {
      "name": "map_each",
      "description": "Override: Applies a function to each element in an array and returns a new array.",
      "examples": [
        {
          "title": "Override: Double each value",
          "summary": "Doubles every value in the input array.",
          "mapping": "map_each(this, x -> x * 2)",
          "in": [1, 2, 3],
          "out": [2, 4, 6]
        }
      ]
    },
    {
      "name": "join",
      "description": "Override: Joins elements of an array into a string with a separator.",
      "examples": [
        {
          "title": "Override: Join with dash",
          "summary": "Joins array elements with a dash.",
          "mapping": "join([\"a\", \"b\", \"c\"], \"-\")",
          "in": ["a", "b", "c"],
          "out": "a-b"
        }
      ]
    }
  ]
}
